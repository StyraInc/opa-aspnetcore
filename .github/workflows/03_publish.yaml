name: "3 â€“ Publish Package"

# Trigger the action on push to main
on:
  push:
    tags:
      - "v*" # Trigger on tags starting with 'v'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency: ${{ github.workflow }}-${{ github.ref }}

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  NuGetDirectory: ${{ github.workspace }}/nuget

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Get all history for automatic versioning

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      #- name: Get latest version from NuGet
      #  id: nuget_version
      #  run: |
      #    $latestVersion = (Invoke-WebRequest -Uri "https://api.nuget.org/v3-flatcontainer/Styra.Opa.AspNetCore/index.json" | ConvertFrom-Json).versions[-1]
      #    echo "LATEST_VERSION=$latestVersion" >> $env:GITHUB_OUTPUT
      #  shell: pwsh

      - name: Get current version
        id: current_version
        run: |
          $currentVersion = (Select-Xml -Path src/Styra.Opa.AspNetCore/Styra.Opa.AspNetCore.csproj -XPath "//PackageVersion").Node.InnerText
          echo "CURRENT_VERSION=$currentVersion" >> $env:GITHUB_OUTPUT
        shell: pwsh

      #- name: Test
      #  run: dotnet test --no-restore --verbosity normal

      - name: Pack
        run: dotnet pack --configuration Release --output ${{ env.NuGetDirectory }} --no-build

      - name: Publish NuGet package
        #if: steps.nuget_version.outputs.LATEST_VERSION != steps.current_version.outputs.CURRENT_VERSION
        run: |
          foreach($file in (Get-ChildItem "${{ env.NuGetDirectory }}" -Filter *.nupkg)) {
            dotnet nuget push $file --api-key "${{ secrets.NUGET_API_KEY }}" --source https://api.nuget.org/v3/index.json --skip-duplicate
          }
        shell: pwsh

  github-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write #  to create release (changesets/action)
      actions: write #  to create tags (changesets/action)
      issues: write # to post issue comments (changesets/action)
      pull-requests: write #  to create pull request (changesets/action)
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Get all history for automatic versioning

      - name: Setup .NET
        uses: actions/setup-dotnet@v4

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Get current version
        id: current_version
        run: |
          $currentVersion = (Select-Xml -Path src/Styra.Opa.AspNetCore/Styra.Opa.AspNetCore.csproj -XPath "//PackageVersion").Node.InnerText
          echo "CURRENT_VERSION=$currentVersion" >> $env:GITHUB_OUTPUT
        shell: pwsh

      - name: Generate Styra.Opa.AspNetCore GH release notes
        run: scripts/latest-release-notes.sh --output=SDK_RELEASE_NOTES.md
        env:
          VERSION: ${{ steps.current_version.outputs.CURRENT_VERSION }}

      - name: Create Styra.Opa.AspNetCore GH release
        uses: softprops/action-gh-release@v2
        with:
          body_path: SDK_RELEASE_NOTES.md
          tag_name: ${{ github.ref }}
